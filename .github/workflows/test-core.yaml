name: test-core

on:
  workflow_dispatch:

env:
  DATABASE_PORT: 5432
  POSTGRES_DB: seac_development_test
  POSTGRES_USERNAME: seac_central
  POSTGRES_PASSWORD: seac_central
  
jobs:  
  test-core:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          TZ: UTC
          PGTZ: UTC
        options: --restart=unless-stopped

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup node.js
        uses: ./.github/actions/node-modules
        id: node_modules
        

          
      - name: Get yarn cache
        if: steps.node_modules.outputs.cache-hit != 'true'
        uses: ./.github/actions/yarn-cache

      - name: Install dependencies
        if: steps.node_modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Build Core package
        run: yarn build:core

      - name: Start Redis
        uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: 6
          redis-port: 12345

      - name: Test Core service
        uses: ./.github/actions/test-core
        with:
          DB_NAME: ${{ env.POSTGRES_DB }}
          DB_USERNAME: ${{ env.POSTGRES_USERNAME }}
          DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          DB_PORT: ${{ env.DATABASE_PORT }}
      - name: unit test
        run: npm i -D jest-sonar-reporter
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}        
