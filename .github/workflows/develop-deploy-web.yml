name: Deploy Web Service to Develop

on:
  push:
    paths:
      - 'packages/web/**'
      - 'tsconfig.json'
      - 'tsconfig.node.json'
      - 'package.json'
      - '.github/workflows/develop-deploy-web.yml'
    branches:
      - develop
      - hotfix/github-actions
  pull_request:
    types:
      - labeled

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    if: ${{ (github.event.action != 'labeled' || github.event.label.name == 'trigger-deploy-web-to-dev') }}
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup node.js
        uses: ./.github/actions/node-modules
        id: node_modules

      - name: Get yarn cache
        if: steps.node_modules.outputs.cache-hit != 'true'
        uses: ./.github/actions/yarn-cache

      - name: Install dependencies
        if: steps.node_modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Test Web service
        uses: ./.github/actions/test-web
        with:
          NODE_ENV: test
          AUTH_API_BASE_URL: https://dev-central.seasiacenter.com/api/auth
          CENTRAL_API_BASE_URL: https://dev-central.seasiacenter.com/api/central
          PAYMENT_API_BASE_URL: https://dev-central.seasiacenter.com/api/payment
          NOTIFICATION_API_BASE_URL: https://dev-central.seasiacenter.com/api/notification
          NEXT_PUBLIC_CORPORATE_WEB_BASE_URL: https://dev-register.seasiacenter.com
          NEXT_PUBLIC_CDN_BASE_URL: https://dev-central-cdn.seasiacenter.com/

  deploy:
    needs: test
    if: ${{ (github.event.action != 'labeled' || github.event.label.name == 'trigger-deploy-web-to-dev') }}
    runs-on: ubuntu-latest
    environment:
      name: develop-web
      url: https://dev-central.seasiacenter.com
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Remove the triggering label if present
        uses: actions-ecosystem/action-remove-labels@v1.3.0
        if: ${{ github.event.action == 'labeled' }}
        with:
          labels: trigger-deploy-web-to-dev

      - name: Deploy Web service
        id: deploy
        uses: ./.github/actions/deploy-web
        with:
          AWS_KEY_ID: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          AWS_ACCESS_KEY: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
          AUTH_API_BASE_URL: https://dev-central.seasiacenter.com/api/auth
          CENTRAL_API_BASE_URL: https://dev-central.seasiacenter.com/api/central
          PAYMENT_API_BASE_URL: https://dev-central.seasiacenter.com/api/payment
          NOTIFICATION_API_BASE_URL: https://dev-central.seasiacenter.com/api/notification
          NOTIFICATION_URL: https://dev-central.seasiacenter.com
          CORPORATE_WEB_BASE_URL: https://dev-register.seasiacenter.com
          CDN_BASE_URL: https://dev-central-cdn.seasiacenter.com
          SENTRY_ENVIRONMENT_NAME: development
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          RECAPTCHA_SITE_KEY: ${{ secrets.RECAPTCHA_SITE_KEY_DEV }}
          ECS_CLUSTER: seac-central-apps-cluster-development
          ECS_SERVICES: seac-central-apps-web-service-development
          ECS_CONTAINER: seac-central-apps-web-container-development
          ECR_REPOSITORY: seac-central-apps-web-development

      - name: Wait
        id: wait-cluster
        timeout-minutes: 10
        env:
          ECS_CLUSTER: ${{ steps.deploy.outputs.ecs-cluster }}
          ECS_SERVICES: ${{ steps.deploy.outputs.ecs-services }}
        run: |
          aws ecs wait services-stable --cluster ${ECS_CLUSTER} --services ${ECS_SERVICES}
